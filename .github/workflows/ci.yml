# .github/workflows/ci.yml

name: CI/CD Pipeline - Application Bibliothèque

on:
  push:
    branches: [ main ] # Exécuter sur les push vers la branche main
  pull_request:
    branches: [ main ] # Exécuter sur les Pull Requests ciblant la branche main
  workflow_dispatch:

jobs:
  build-test-scan-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install backend dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint with Flake8
        working-directory: ./backend
        run: |
          pip install flake8
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      # Tests optionnels ici

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata backend
        id: meta_backend
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/backend

      - name: Extract Docker metadata frontend
        id: meta_frontend
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/frontend

      # --- Modification ici ---
      - name: Build and Push Backend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          # Pousser seulement si l'exécution est sur la branche main
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ steps.meta_backend.outputs.tags }}
          labels: ${{ steps.meta_backend.outputs.labels }}
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # --- Modification ici ---
      - name: Build and Push Frontend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          # Pousser seulement si l'exécution est sur la branche main
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ steps.meta_frontend.outputs.tags }}
          labels: ${{ steps.meta_frontend.outputs.labels }}
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Scan Backend image for vulnerabilities
        # Condition pour s'assurer que l'image existe localement avant de scanner
        if: always() # Toujours exécuter cette étape si les précédentes ont réussi ou ont été sautées
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ steps.meta_backend.outputs.tags }}
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Scan Frontend image for vulnerabilities
        # Condition pour s'assurer que l'image existe localement avant de scanner
        if: always() # Toujours exécuter cette étape si les précédentes ont réussi ou ont été sautées
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ steps.meta_frontend.outputs.tags }}
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
